name: Deploy Frappe App

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run StrongDM Client in Docker Container
        run: |
          echo "Starting StrongDM Docker Service Client Container..."
          # Pull the official StrongDM client Docker image
          docker pull public.ecr.aws/strongdm/client:latest

          # Run the container in detached mode, passing the service token as an environment variable.
          # We map a local port (e.g., 50000) to the container's internal port for SSH connections.
          # The actual port used for SSH will be dynamically assigned by StrongDM and can be found via `sdm status`.
          # It's crucial to expose ports that StrongDM might use for its proxy connections.
          # For simplicity, we'll map a generic port, but for specific resources, you might need to map more.
          docker run -d \
            --name strongdm-client \
            --rm \
            -p 50000:50000 \
            -e SDM_SERVICE_TOKEN=${{ secrets.SDM_ADMIN_TOKEN }} \
            public.ecr.aws/strongdm/client:latest
          echo "StrongDM Docker container started."

      - name: Wait for StrongDM Client Readiness in Docker
        run: |
          echo "Waiting for StrongDM client in Docker to be ready..."
          # Use a loop to check the status of the StrongDM client inside the container
          # The `sdm status` command inside the container will indicate readiness.
          for i in $(seq 1 20); do # Increased attempts to 20 (100 seconds total)
            if docker exec strongdm-client sdm status > /dev/null 2>&1; then
              echo "StrongDM client in Docker is ready."
              exit 0
            fi
            echo "StrongDM client not ready yet, waiting... ($i/20)"
            sleep 5
          done
          echo "StrongDM client in Docker did not become ready in time."
          exit 1

      - name: Get StrongDM Resource Status and Ports
        run: |
          echo "Checking StrongDM resource status from within the container..."
          # Execute sdm status inside the container to get the current status and assigned ports
          docker exec strongdm-client sdm status
          # This output will show the dynamically assigned local proxy ports for your resources.

      - name: Deploy to customer1
        if: contains(github.event.head_commit.message, '[customer1]')
        run: |
          echo "Attempting SSH deployment to customer1..."
          # The most reliable way to use sdm ssh with the client in a Docker container
          # is to execute the `sdm ssh` command directly inside the container.
          docker exec strongdm-client sdm ssh erp_demo "
            cd /opt/bench/frappe-bench/ &&
            bench get-app git@github.com:oun-qa/malek_app.git
          "
          echo "SSH deployment command executed."

      - name: Stop StrongDM Docker Container (Cleanup)
        if: always()
        run: |
          echo "Stopping StrongDM Docker container..."
          docker stop strongdm-client || true
          echo "StrongDM Docker container stopped."
